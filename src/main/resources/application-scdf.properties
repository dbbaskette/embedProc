# Spring Cloud Data Flow (SCDF) profile configuration
app.processor.mode=scdf

# OpenAI Configuration (from VCAP_SERVICES)
spring.ai.openai.api-key=${vcap.services.${service:openai}.credentials.api-key}
spring.ai.openai.embedding.options.model=${vcap.services.${service:openai}.credentials.embedding-model:text-embedding-3-small}

# PostgreSQL Configuration (from VCAP_SERVICES)
# This connects to a PostgreSQL database with the pgvector extension enabled
spring.datasource.url=${vcap.services.${service:postgresql}.credentials.jdbcUrl}
spring.datasource.username=${vcap.services.${service:postgresql}.credentials.username}
spring.datasource.password=${vcap.services.${service:postgresql}.credentials.password}
spring.datasource.driver-class-name=org.postgresql.Driver

spring.ai.vectorstore.pgvector.enabled=true
spring.ai.vectorstore.pgvector.initialize-schema=true
spring.ai.vectorstore.pgvector.dimensions=768  
spring.ai.vectorstore.pgvector.distance-type=COSINE_DISTANCE
#spring.ai.vectorstore.pgvector.table-name=embeddings

# Cloud Foundry specific settings
spring.application.name=${vcap.application.name:embedProc}
info.app.name=@project.artifactId@
info.app.version=@project.version@

# Enable Cloud Foundry connector
#spring.cloud.cloudfoundry.enabled=true

# Logging configuration
logging.level.root=INFO
logging.level.com.baskettecase=DEBUG
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Logging
logging.level.com.baskettecase.embedProc=DEBUG
logging.level.org.springframework.ai=DEBUG
logging.level.org.springframework.cloud.stream=DEBUG

# These will be set by SCDF
#app.processor.scdf.input-channel=textProcInput
#app.processor.scdf.output-channel=textProcOutput

# Actuator and probe endpoints
management.endpoints.web.exposure.include=health,info
management.endpoint.health.probes.enabled=true
management.server.port=8081
#debug=true

# --- Spring AI pgvector/Postgres configuration ---
# You can set these via environment variables or deployment properties
# Rabbit log output channel for embedding storage logs
spring.cloud.stream.bindings.embeddingLogOutput.destination=embedding.log
# spring.datasource.url=jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
# spring.datasource.username=${POSTGRES_USER}
# spring.datasource.password=${POSTGRES_PASSWORD}
# spring.ai.vectorstore.pgvector.enabled=true
# spring.ai.vectorstore.pgvector.table-name=embeddings  # Change if you want a different table

app.query.text="What products does UDM contain?"