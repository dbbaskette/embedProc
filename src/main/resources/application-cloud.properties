# Cloud/SCDF Deployment Configuration
# This profile is activated by SCDF deployment
app.processor.mode=scdf

# OpenAI Configuration (from VCAP_SERVICES)
# Will use the first service that provides an API key
# You can bind any service that provides 'api-key' in its credentials
spring.ai.openai.api-key=${vcap.services.*.credentials.api-key}
spring.ai.openai.embedding.options.model=${vcap.services.*.credentials.embedding-model:text-embedding-3-small}

# PostgreSQL Configuration (auto-configured by Spring Boot's Cloud Foundry support)
# Will automatically bind to any PostgreSQL service in VCAP_SERVICES
spring.datasource.driver-class-name=org.postgresql.Driver

# Database Connection Pooling for Performance
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000

# Let Spring Boot auto-configure the DataSource from VCAP_SERVICES
# It will automatically detect and use the first bound database service
# and set the following properties:
# - spring.datasource.url
# - spring.datasource.username
# - spring.datasource.password

# Vector Store Configuration (pgvector)
spring.ai.vectorstore.pgvector.enabled=true
spring.ai.vectorstore.pgvector.initialize-schema=true
# OpenAI text-embedding-3-small has 1536 dimensions
spring.ai.vectorstore.pgvector.dimensions=1536
spring.ai.vectorstore.pgvector.distance-type=COSINE_DISTANCE
#spring.ai.vectorstore.pgvector.table-name=embeddings

# Cloud Foundry specific settings
# Use consistent service name for service registry (not the CF app name)
spring.application.name=embedProc
info.app.name=@project.artifactId@
info.app.version=@project.version@
info.app.cf-name=${vcap.application.name:embedProc}

# Service Registry Configuration
spring.cloud.service-registry.auto-registration.enabled=true
spring.cloud.service-registry.auto-registration.register-management=true
spring.cloud.service-registry.auto-registration.fail-fast=false

# Enable Cloud Foundry connector
#spring.cloud.cloudfoundry.enabled=true

# Reference Numbers Configuration
app.reference-numbers.enabled=true
app.reference-numbers.default.refnum1=100001
app.reference-numbers.default.refnum2=200001
app.reference-numbers.enable-parallel-processing=true

# Monitoring & Metrics Configuration
# Enable RabbitMQ metrics publishing for distributed monitoring
app.monitoring.rabbitmq.enabled=true
app.monitoring.rabbitmq.queue-name=pipeline.metrics
# app.monitoring.instance-id=
# app.monitoring.public-app-uri=

# Logging configuration - Default levels (SCDF will override these)
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] %logger{36} - %msg%n

# Service discovery logging
logging.level.org.springframework.cloud.netflix.eureka=DEBUG
logging.level.com.netflix.discovery=DEBUG
logging.level.org.springframework.cloud.service=DEBUG

# Application logging
logging.level.com.baskettecase.embedProc=INFO

# Reduce Spring Cloud Stream debug logging to prevent log rate limits
logging.level.org.springframework.cloud.stream=WARN
logging.level.org.springframework.integration=WARN
logging.level.org.springframework.amqp=WARN
logging.level.org.springframework.messaging=WARN

# Reduce general Spring debug logging
logging.level.org.springframework=WARN

# Web Server Configuration
# Enable web server for API endpoints (unlike standalone mode)
server.port=${PORT:8080}

# Enhanced management endpoints for service discovery
management.endpoints.web.exposure.include=health,metrics,info,env,configprops,discovery,prometheus
management.endpoint.health.show-details=always
management.endpoint.health.show-components=always
management.endpoint.metrics.enabled=true
management.metrics.export.prometheus.enabled=true

# Spring Cloud Function Configuration - Function name for SCDF
spring.cloud.function.definition=embedProc

# SCDF Message Processing Timeouts
spring.cloud.stream.bindings.embedProc-in-0.consumer.maxAttempts=1
spring.cloud.stream.bindings.embedProc-in-0.consumer.concurrency=1

# Async Processing Configuration for Performance
spring.task.execution.pool.core-size=4
spring.task.execution.pool.max-size=8
spring.task.execution.pool.queue-capacity=100
spring.task.execution.thread-name-prefix=embedProc-

# Default query text for vector operations
app.query.text="What products does UDM contain?"

# Enhanced Chunking Configuration for Better Q&A Context
# Larger chunks (800-1200 words) for more meaningful context
#app.chunking.max-words-per-chunk=1000
#app.chunking.overlap-words=150

# Work Limiting Configuration for Multi-Instance Deployment
# Prevent any single instance from taking too much work
app.processing.max-concurrent-files=2